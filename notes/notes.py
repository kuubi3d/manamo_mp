
                        
                        """ 
                        **  MANAMO, THIS IS WHERE WE ARE LOOKING FOR A WAY TO SMOOTH THE PATH GENERATED BY THE RRT ALGORITHM ** 
                            
                            I tried using " interpolate.splprep..." and " interpolate.CubicSpline " but got  -- ValueError: `x` must be strictly increasing sequence -- even after sorting nodes on line 304.
                            Once this part is working there are a few other sections that may need your assistance.  They invole argparse and some addtional methods that will be written.  

                            Also, please provide any comments or suggestions on how things could be better organized and written.
                    
                        """

                        #path_list = list(sorted(rrt_path.path_tree.nodes[::2], rrt_path.path_tree.nodes[1::2]))
                        #x1, y1 = map(list, zip(*path_list))
                        #path_list = map(list, zip(*path_sort))
                       
                        """ Added these lines to see if there was a problem with 'rrt_path.path_tree.nodes' data structure """
                        #x1 = np.arange(2, 60, step= 2)
                        #y1 = np.arange(1, len(x1)+1)
                        
                        #print ("x1", x1,"\n")
                        #print ("y1", y1,"\n")
                        
                        #RRT.smooth(path_list)
                        #RRT.wp_nodes = rrt_path.path_tree.edges
                        
                        #RRT.wp_nodes = interpolate.CubicSpline(x1, y1)
                        #RRT.wp_nodes = list(map(list, interpolate.CubicSpline(x1, y1)))
                        #RRT.wp_nodes, *rest = interpolate.splprep([a, b] for a, b in (smlist))